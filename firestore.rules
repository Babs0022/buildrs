rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Profiles can be read by anyone, but only written by the owner.
    // The profile document ID is the user's wallet address.
    match /profiles/{address} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.wallet_address == address;
    }

    // Builds can be read by anyone.
    // Creation is allowed if the user is authenticated and the build's userId matches their address.
    // Updates and deletes are allowed only by the build's owner.
    match /builds/{buildId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.token.wallet_address;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.token.wallet_address;
    }

    // Comments can be read by anyone.
    // Creation is allowed by any authenticated user.
    // Updates and deletes are restricted to the comment's original author.
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // Votes can be read by anyone.
    // Users can create, update, and delete their own votes.
    // The vote document ID should be something like {userId}_{buildId} to ensure uniqueness.
    match /votes/{voteId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
  }
}
